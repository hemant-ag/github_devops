git init
git status
git add main.py
git status

#to commit you need to set below
git config --list
git config user.name "Hemant Agarwal"
git config user.email "hemantbansal1992@gmail.com"
git config --list

#do commit now
git commit -m "added main.py"

# if this command is run after commit then it deletes that version of main otherwise will fail before commiting
git rm --cached main.py

# this command will link the remote repository to our local repository
git remote add origin https://github.com/hemant-ag/github_devops.git

# to check remote git repository
git remote -v

# Afterwards if we run the command , it will ask for user name and password
git push origin master

# to avoid this , generate a personal access token(PAT) from github and run the following
git remote set-url origin https://{PAT}@github.com/hemant-ag/github_devops.git
git push origin master:

#so created a new dev branch from master
git checkout -B dev
OR
git branch dev
git checkout dev

#added the concepts of HEAD i.e. last commit on a branch
# so, for example i am working on master branch so my head is latest commit on that branch

ubuntu$ git log --oneline
4dcd82c (HEAD -> master, origin/master) added remote commands in git_commands.txt
9085d03 added git_commands.txt and some idea files auto added
07c79f2 added main.py

#we can use command to pull the code from master branch from github
git pull origin master

#so if we want to have all branches from our remote to local, run the command
git fetch

#Pre commit steps
#so now if we have a wrong syntax in some file or some sensitive data in file like password, key etc
#we can have the commit stopped, so that we can check the files
#it will help us not commit that file to github as that is very dangerous, secrets can be leaked

#We can create a pre-commit file in hooks folder present in .git directory having content

files=$(git diff --cached --name-only --diff-filter=ACM | grep '\.py$'
flake8 $files

#Above file will filter only the names of changed files and will check only for python files
#A: Added (new files staged for commit)
#C: Copied (files copied/staged)
#M: Modified (existing files changed and staged)